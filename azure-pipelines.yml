trigger:
  branches:
    include:
      - main

variables:
  frontendPath: 'fe'
  backendPath: 'be/WebAPI'
  vpsUser: 'root'
  vpsHost: '82.180.144.91'
  appPath: '/var/www/almuni'

stages:
- stage: BuildFrontend
  displayName: 'Build Svelte Frontend'
  jobs:
  - job: BuildFE
    pool:
      name: 'Astro'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
    - task: DownloadSecureFile@1
      name: FrontendEnv
      inputs:
        secureFile: 'envexample'
    - script: |
        cd $(frontendPath)
        cp $(FrontendEnv.secureFilePath) .env
        npm install
        npm run build
      displayName: 'Build Frontend'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(frontendPath)/build'
        artifact: 'frontend'

- stage: BuildBackend
  displayName: 'Build .NET Backend'
  jobs:
  - job: BuildBE
    pool:
      name: 'Astro'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.x'
    - script: |
        cd $(backendPath)
        dotnet restore
        dotnet publish -c Release -o publish
      displayName: 'Restore and Publish .NET App'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(backendPath)/publish'
        artifact: 'backend'

- stage: Deploy
  displayName: 'Deploy to VPS'
  jobs:
  - job: Deploy
    pool:
      name: 'Astro'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: 'frontend'
        path: '$(Pipeline.Workspace)/frontend'
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: 'backend'
        path: '$(Pipeline.Workspace)/backend'

    - task: CopyFilesOverSSH@0
      inputs:
        sshEndpoint: 'AlmuniVPS'
        sourceFolder: '$(Pipeline.Workspace)/frontend'
        targetFolder: '$(appPath)/frontend'
        cleanTargetFolder: true

    - task: CopyFilesOverSSH@0
      inputs:
        sshEndpoint: 'AlmuniVPS'
        sourceFolder: '$(Pipeline.Workspace)/backend'
        targetFolder: '$(appPath)/backend'
        cleanTargetFolder: true

    - task: SSH@0
      inputs:
        sshEndpoint: 'AlmuniVPS'
        runOptions: 'commands'
        commands: |
          sudo systemctl restart alumni-backend.service
          sudo systemctl restart nginx
